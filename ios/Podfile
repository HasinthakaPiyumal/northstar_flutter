platform :ios, '15.6'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks! # Remove use_modular_headers! globally

  $FirebaseSDKVersion = '10.22.0'

  # Firebase modules with modular headers set to false explicitly
  pod 'Firebase/Crashlytics', :modular_headers => false
  pod 'Firebase/Core', :modular_headers => false
  pod 'Firebase/Messaging', :modular_headers => false

  # Other dependencies
  pod 'PhoneNumberKit', '~> 3.7.6'
  pod 'MLKitCommon', :podspec => 'MLKitCommon.podspec.json'
  pod 'MLKitVision', :podspec => 'MLKitVision.podspec.json'
  pod 'MLKitNaturalLanguage', :podspec => 'MLKitNaturalLanguage.podspec.json'

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    target.build_configurations.each do |config|
      # Allow non-modular headers in framework modules
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      config.build_settings['ENABLE_BITCODE'] = 'NO'  # Disable bitcode
    end

    # Additional adjustments for Firebase-specific issues
    if target.name.start_with?('firebase_') || target.name.start_with?('Firebase')
      target.build_configurations.each do |config|
        config.build_settings['DEFINES_MODULE'] = 'YES'  # Ensure Firebase modules are treated as modules
      end
    end

    # Adjust BoringSSL-GRPC flags to avoid warnings
    if target.name == 'BoringSSL-GRPC'
      target.source_build_phase.files.each do |file|
        if file.settings && file.settings['COMPILER_FLAGS']
          flags = file.settings['COMPILER_FLAGS'].split
          flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
          file.settings['COMPILER_FLAGS'] = flags.join(' ')
        end
      end
    end
  end
end
